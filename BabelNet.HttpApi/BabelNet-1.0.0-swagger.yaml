openapi: 3.0.0
servers:
  - description: Main
    url: https://babelnet.io/v6
info:
  description: |
    This page describes how you can query BabelNet through an HTTP interface that returns JSON. You can append the `key` parameter to the HTTP requests as shown in the examples below. To obtain an API key please read the [key & limits](https://babelnet.org/guide#access) page. All requests must be executed using the GET method and they should include the `Accept-Encoding: gzip` header in order to obtain compressed content. 
  version: "1.0.0"
  title: BabelNet HTTP API
  contact:
    email: you@your-company.com
  license:
    name: "LICENSES: All the data of the external resources are released under the terms of the respective owners' licenses."
    url: 'https://babelnet.org/licenses/'
externalDocs:
  description: BabelNet HTTP API Guide
  url: https://babelnet.org/guide
paths:
  /getVersion:
    get:
      operationId: getVersion
      description: Gets the current version of the BabelNet HTTP API
      security:
        - key: []
      responses:
        '200':
          description: Object containing version number
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    example: V5_0
  /getSynsetIds:
    get:
      operationId: getSynsetIds
      description: Retrieve the IDs of the Babel synsets (concepts) denoted by a given word
      security:
        - key: []
      parameters:
        - $ref: '#/components/parameters/lemma_R'
        - $ref: '#/components/parameters/searchLang_RM'
        - $ref: '#/components/parameters/targetLang_SL'
        - $ref: '#/components/parameters/pos_M'
        - $ref: '#/components/parameters/source_M'
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json;charset=UTF8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SynsetId'
              example:
                - id: bn:00289737n
                  pos: NOUN
                  source: BABELNET
                - id: bn:26774334v
                  pos: VERB
                  source: BABELNET
                - id: bn:26558969n
                  pos: NOUN
                  source: BABELNET
                - id: bn:00005054n
                  pos: NOUN
                  source: BABELNET
        '400':
          $ref: '#/components/responses/WrongParameters'
  /getSynset:
    get:
      operationId: getSynset
      description: Retrieve the information of a given Synset
      security:
        - key: []
      parameters:
        - name: id
          in: query
          description: The id of the Synset you want to retrieve
          required: true
          schema:
            type: string
          example: bn:14792761n
        - $ref: '#/components/parameters/targetLang_EN'
      responses:
        '200':
          description: The Synset with the given id
          content:
            application/json;charset=UTF8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Synset'
        '400':
          $ref: '#/components/responses/WrongParameters'
  /getSenses:
    get:
      operationId: getSenses
      description: Retrieve the senses of a given word
      security:
        - key: []
      parameters:
        - $ref: '#/components/parameters/lemma_R'
        - $ref: '#/components/parameters/searchLang_R'
        - $ref: '#/components/parameters/targetLang_SL'
        - $ref: '#/components/parameters/pos_M'
        - $ref: '#/components/parameters/source_M'
      responses:
        '200':
          description: Senses for the given word
          content:
            application/json;charset=UTF8:
              schema:
                type: array
                description: A list of senses
                items:
                  $ref: '#/components/schemas/Sense'
        '400':
          $ref: '#/components/responses/WrongParameters'
  /getSynsetIdsFromResourceID:
    get:
      operationId: getSynsetIdsFromResourceID
      description: |
        Retrieve a list of BabelNet IDs given a resource identifier

        This method must be accessed differently according to the resource identifier that is being used. For resources that have a unique identifier for each item (e.g. Wikidata) the only required parameter is the id; this holds for all the resources except Wikipedia and Wikiquote, where a single page title is not unique across different languages: this is why when using a Wikipedia ID (i.e., page title) it is mandatory to include the search language and, optionally, the POS tag.
      security:
        - key: []
      parameters:
        - name: id
          in: query
          description: The id of the Synset you want to retrieve or the page title you want to search for
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/source_R'
        - $ref: '#/components/parameters/searchLang_R'
        - $ref: '#/components/parameters/targetLang_SL'
        - $ref: '#/components/parameters/pos_M'
        - name: wnVersion
          in: query
          description: If the value of the parameter source is `WN` (WordNet), using this field allow to specify the WordNet version of the parameter id. 
          schema:
            type: string
      responses:
        '200':
          description: Responds with an array of one Synset that matches the given `id` parameter or an empty array if not found.
          content:
            application/json;charset=UTF8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Synset'
        '400':
          $ref: '#/components/responses/WrongParameters'
  /getOutgoingEdges:
    get:
      operationId: getOutgoingEdges
      description: Retrieve edges, hypernyms, hyponyms and antonyms of a given BabelNet synset
      security:
        - key: []
      parameters:
        - name: id
          in: query
          description: The id of the Synset
          required: true
          schema:
            type: string
          example: bn:03083790n
      responses:
        '200':
          description: Edge (SynsetRelation) objects associated with the Synset
          content:
            application/json;charset=UTF8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SynsetRelation'
        '400':
          $ref: '#/components/responses/WrongParameters'
components:
  headers:
    Accept-Encoding:
      description: Include the 'Accept-Encoding:' gzip header in order to obtain compressed content.
      example: gzip
      schema:
        type: string
    Content-Encoding:
      description: Response content is compressed
      schema:
        type: string
  parameters:
    key:
      name: key
      in: query
      description: API key
      required: true
      schema:
        type: string
    lemma_R: # Required version
      name: lemma
      in: query
      description: The word to search for.
      required: true
      example: apple
      schema:
        type: string
    searchLang: # Optional version
      name: searchLang
      in: query
      description: The language of the word.
      schema:
         $ref: '#/components/schemas/Language'
    searchLang_R: # Require version
      name: searchLang
      in: query
      description: the language of the word.
      required: true
      schema:
        $ref: '#/components/schemas/Language'
    searchLang_RM: # Required, multi-value version
      name: searchLang
      in: query
      description: The language of the word. Accepts multiple values. 
      required: true
      schema:
       $ref: '#/components/schemas/LanguageList'
    targetLang_SL: # Version that defaults to searchLang
      name: targetLang
      in: query
      description: |
        The languages in which the data are to be retrieved.

        Default value is the search language and accepts not more than 3 languages except the search language. 
      example: IT
      schema:
        $ref: '#/components/schemas/LanguageList'
    targetLang_EN: # Version that defaults to English (EN)
      name: targetLang
      in: query
      description: |
        The languages in which the data are to be retrieved.

        Default value is the English and accepts not more than 3 languages except the default language.
      example: IT
      schema:
        $ref: '#/components/schemas/LanguageList'
    pos_M:
      name: pos
      in: query
      description: |
        Returns only the synsets containing this part of speech (NOUN, VERB, etc). Accepts multiple values. 
      example: NOUN
      schema:
        $ref: '#/components/schemas/UniversalPOS'
    source_M:
      name: source
      in: query
      description: Returns only the synsets containing these sources (WIKT, WIKIDATA, etc). Accepts multiple values. 
      example: WIKT
      schema:
        $ref: '#/components/schemas/Source'
    source_R:
      name: source
      in: query
      description: Returns only the synsets containing these sources (WIKT, WIKIDATA, etc).
      required: true
      example: WIKT
      schema:
        $ref: '#/components/schemas/Source'
  responses:
    WrongParameters:
      description: There is an error with one or more parameters in the request
      content:
        application/json;charset=UTF-8:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Wrong Parameters.
    SynsetArray:
      description: An array of Synset objects
      content:
        application/json;charset=UTF-8:
          schema:
            type: array
            items:
                $ref: '#/components/schemas/Synset'
  schemas:
    Gloss:
      type: object
      description: A short description of the meaning of a word
      properties:
        source:
          $ref: '#/components/schemas/Source'
        sourceSense:
          type: integer
          description: The WordNet or Wikipedia sense from which this gloss is taken
          example: 123090446
        language:
          $ref: '#/components/schemas/Language'
        gloss:
          type: string
          description: The Gloss text
          example: Apple-designed processors, marketed for the Macintosh as Apple Silicon, are system on a chip and system in a package processors designed by Apple Inc., mainly using the ARM architecture.
        tokens:
          type: array
          description: A list of TokenIds. Each TokenId is the association between the lemma that appears in this Gloss, and the SynsetId that identifies the lemma in BabelNet.
          items:
            $ref: '#/components/schemas/Token'
    Image:
      type: object
      description: Metadata related to a web-hosted image file.
      properties:
        name:
          type: string
          description: The MediaWiki page name for this image.
          example: Apple_A4_Chip.jpg#WIKI
        languages:
          type: array
          description: The languages for this image.
          items:
            $ref: '#/components/schemas/Language'
          example:
            - "NL"
            - "VI"
            - "FR"
            - "ES"
            - "DE"
            - "HU"
            - "FA"
            - "EN"
            - "KO"
            - "IT"
            - "RU"
        urlSource:
          $ref: '#/components/schemas/Source'
        license:
          type: string
          description: The license for the Image.
          example: CC_BY_SA_30
        thumbUrl:
          type: string
          description: Gets the URL for the thumbnail image of this Image
          example: https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Apple_A4_Chip.jpg/200px-Apple_A4_Chip.jpg
        url:
          type: string
          description: Gets the URL to the full-size image
          example: https://upload.wikimedia.org/wikipedia/commons/1/17/Apple_A4_Chip.jpg
        badImage:
          type: boolean
          description: True if the image is bad to censored
          example: false
    Language:
      type: string
      description: A language code. [Allowed values](https://babelnet.org/5.0/javadoc/it/uniroma1/lcl/jlt/util/Language.html)
      example: EN
    LanguageList:
      type: array
      description: A list of language codes
      example: EN,DE,ES
      items:
        $ref: '#/components/schemas/Language'
    Pointer:
      type: object
      description:  Models a semantic pointer in BabelNet. Includes an associative (i.e. semantically unspecified) relation.
      properties:
        fSymbol:
          type: string
          description: A symbol that is used to indicate this pointer type.
          example: r
        name:
          type: string
          description: User-friendly name of this pointer type
          example: Semantically related form
        shortName:
          type: string
          description: A short-form name of this pointer type
          example: related
        relationGroup:
          type: string
          example: OTHER
          enum:
            - HOLONYM
            - HYPERNYM
            - HYPONYM
            - MERONYM
            - OTHER
        isAutomatic:
          type: boolean
          example: false
          description: true if the relation is obtained from an automatic resource
    Sense:
      description: Combines a SenseCore subtype type descriminator
      type: object
      allOf:
        - $ref: '#/components/schemas/SenseCore'
      properties:
        type:
          type: string
          description: Descriminates the subtype of the SenseCore (e.g. BabelSense, WordNetSense)
          enum:
            - BabelSense
            - WordNetSense
        properties:
          $ref: '#/components/schemas/SenseCore'
    SenseCore:
      description: The core properties of a Sense, common to all subtypes
      type: object
      properties:
        fullLemma:
          title: Full lemma
          type: string
          description: The full lemma for this sense
          example: Apple_(name)
        simpleLemma:
          type: string
          description: Simplified lemma, with qualifications in paranthesis removed
          example: apple
        lemma:
          type: object
        source:
          $ref: '#/components/schemas/Source'
        senseKey:
          type: string
          description: the sensekey of the WordNet, Omega, Wikidata or Wiktionary sense to which this Sense corresponds, if any.
          example: "38117537"
        frequence:
          type: integer
          deprecated: true
          description: Discontinued. Gets the frequency score for this Sense. This score represents, for a Wikipedia page/redirection, the number of its incoming links. Otherwise it is null.
        language:
          $ref: '#/components/schemas/Language'
        pos:
          type: string
        translationInfo:
          type: string
          description: translation-related information. To be removed in future version.
          deprecated: true
        pronunciations:
          type: object
          properties:
            audios:
              type: array
              items:
                type: object
            transcriptions:
              type: array
              items:
                type: string
        synsetID:
          $ref: '#/components/schemas/SynsetId'
        bKeySense:
          title: Key sense
          type: boolean
          description: Returns true if it is a key sense
        idSense:
          type: integer
          description: The numberic id of the sense
          example: 102582750
        tags:
          type: object
    BabelSense:
      description: A subtype of SenseCore for senses in BabelNet
      type: object
      allOf:
        - $ref: '#/components/schemas/SenseCore'
    WordNetSense:
      description: A subtype of SenseCore for senses in WordNet
      type: object
      allOf:
        - $ref: '#/components/schemas/SenseCore'
      properties:
        wordNetSenseNumber:
          type: number
          description: The sense number in WordNet
        wordNetOffset:
          type: string
          description: The offset of the Sense in WordNet
        wordNetSynsetPosition:
          type: number
          description: The synset position of the Sense in WordNet
    Source:
      type: string
      description: Sources for the BabelNet senses. [Allowed values](https://babelnet.org/5.0/javadoc/it/uniroma1/lcl/babelnet/data/SenseSource.html)
      example: BABELNET
    Synset:
      type: object
      description: A set of one or more synonyms
      properties:
        senses:
          type: array
          description: Sense objects associated with the Synset
          items:
            $ref: '#/components/schemas/Sense'
        wnOffsets:
          type: array
          description: WordNet offsets corresponding to this Synset
          items:
            $ref: '#/components/schemas/SynsetId'
        glosses:
          type: array
          description: Glosses associated with this Synset
          items:
            $ref: '#/components/schemas/Gloss'
        examples:
          type: array
          description: A list of usage examples for this Synset
          items: # TODO
            type: object
        images:
          type: array
          description: A list of images associated with this Synset
          items:
            $ref: '#/components/schemas/Image'
        synsetType:
          $ref: '#/components/schemas/SynsetType'
        categories:
          type: array
          description: A list of Wikipedia categories for this Synset
          items:
            $ref: '#/components/schemas/WikipediaCategory'
        translations:
          type: object # TODO
          description: Translations between senses found in this BabelSynset.
        domains:
          type: object
          description: A map of Domains to the importance of this Synset.
          example:
            COMPUTING:
              0.40721815824508667
        filterLangs:
          type: array
          description: The set of languages used in this Synset.
          items:
            $ref: '#/components/schemas/Language'
        tags:
          type: array
          description: A list of tags associated with the Synset.
          items:
            type: object # TODO
        bKeyConcepts:
          type: boolean
          description: True if the Synset is a key concept.
    SynsetId:
      type: object
      description: An object that identifies a Synset
      properties:
        id:
          type: string
          description: The ID code of the Synset. `bn:` prefix represents a BabelNet synset. `wn:` prefix represents a WordNet synset.
          example: bn:14289548n
        pos:
          $ref: '#/components/schemas/UniversalPOS'
        source:
          $ref: '#/components/schemas/Source'
    SynsetRelation:
      type: object
      description: A class that models a relation to a Synset
      properties:
        language:
          $ref: '#/components/schemas/Language'
        pointer:
          $ref: '#/components/schemas/Pointer'
        target:
          type: string
          description: target id
          example: bn:00021497n
        weight:
          type: number
          format: double
          description: The weight of the Relation. To be removed in future version.
          deprecated: true
        normalizedWeight:
          type: number
          format: double
          description: the weight normalized across all relations of the same knowledge source. To be removed in future version.
          deprecated: true
    SynsetType:
      type: string
      description: |
        A kind of Synset, which can be one of the following:
          - "CONCEPT": an abstraction or generalization from experience
          - "NAMED_ENTITY": a word that clearly identifies one item
          - "Unknown": a word that does not fit the other types
      example: CONCEPT
      enum:
        - CONCEPT
        - NAMED_ENTITY
        - UNKNOWN
    Token:
      type: object
      description: Represents the association between the word that appears in a Gloss and the SynsetId that identifies the lemma in BabelNet.
      properties:
        start:
          type: integer
          description: The start index of the Token
          example: 76
        end:
          type: integer
          description: The end index of the Token
          example: 91
        id:
          $ref: '#/components/schemas/SynsetId'
        word:
          type: string
          description: The word of this Token
          example: "system on a chip"
    UniversalPOS:
      type: string
      description: A code representing a 'part of speech'. [Allowed values](https://babelnet.org/5.0/javadoc/it/uniroma1/lcl/jlt/util/UniversalPOS.html)
      example: NOUN
      enum:
        - ADJ
        - ADJ_ADP
        - ADJ_PRON
        - ADP
        - ADP_ADJ
        - ADP_ADP
        - ADP_CCONJ
        - ADP_DET
        - ADP_NOUN
        - ADP_NUM
        - ADP_PART
        - ADP_PRON
        - ADP_PROPN
        - ADP_X
        - ADV
        - ADV_PRON
        - AUX
        - AUX_PRON
        - CCONJ
        - CCONJ_ADJ
        - CCONJ_ADP
        - CCONJ_ADV
        - CCONJ_AUX
        - CCONJ_CCONJ
        - CCONJ_DET
        - CCONJ_INTJ
        - CCONJ_NOUN
        - CCONJ_NUM
        - CCONJ_PART
        - CCONJ_PRON
        - CCONJ_PROPN
        - CCONJ_VERB
        - CCONJ_X
        - DET
        - INTJ
        - NOUN
        - NOUN_ADJ
        - NOUN_NOUN
        - NOUN_PRON
        - NOUN_PUNCT
        - NUM
        - PART
        - PART_ADJ
        - PART_ADV
        - PART_AUX
        - PART_NOUN
        - PART_PART
        - PART_PRON
        - PART_VERB
        - PRON
        - PRON_PRON
        - PRON_VERB
        - PROPN
        - PROPN_DET
        - PUNCT
        - SCONJ
        - SYM
        - VERB
        - VERB_ADP
        - VERB_ADV
        - VERB_NOUN
        - VERB_PRON
        - X
        - X_NOUN
        - X_PRON
        - X_X
    WikipediaCategory:
      type: object
      description: Represents a Wikipedia category
      properties:
        category:
          type: string
          description: The name of the Wikipedia category
          example: ARM_architecture
        language:
          type: string
          description: The language of the Wikipedia category
          example: EN
  securitySchemes:
    key:
      type: apiKey
      name: key
      description: API key obtained after signing up to BabelNet (see [key & limits](https://babelnet.org/guide#HowdoIobtainaBabelNetAPIkey?)) 
      in: query